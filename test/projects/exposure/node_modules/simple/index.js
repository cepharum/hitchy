/**
 * (c) 2017 cepharum GmbH, Berlin, http://cepharum.de
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2017 cepharum GmbH
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * @author cepharum
 */

"use strict";

module.exports = {
	onExposing: function( options ) { // eslint-disable-line no-unused-vars
		const that = this; // eslint-disable-line no-unused-vars

		[
			[ "Model", "models" ],
			[ "Controller", "controllers" ],
			[ "Service", "services" ],
			[ "Policy", "policies" ],
		]
			.forEach( function( [ singular, plural ] ) {

				const exists = that.runtime[plural].hasOwnProperty( "Static" );
				if ( !exists ) {
					that.runtime[plural].Static = {};
				}

				that.runtime[plural].Static["beforeSimpleFound" + singular] = exists;

				that.runtime[plural].Static["toKeep" + singular] = "before-simple";
				that.runtime[plural].Static["toReplace" + singular] = "before-simple";

			} );
	},
	onExposed: function( options ) { // eslint-disable-line no-unused-vars
		const that = this;

		[
			[ "Model", "models" ],
			[ "Controller", "controllers" ],
			[ "Service", "services" ],
			[ "Policy", "policies" ],
		]
			.forEach( function( [ singular, plural ] ) {

				const exists = that.runtime[plural].hasOwnProperty( "Static" );
				if ( !exists ) {
					that.runtime[plural].Static = {};
				}

				that.runtime[plural].Static["afterSimpleFound" + singular] = exists;

				that.runtime[plural].Static["toKeep" + singular + "Lately"] = "after-simple";
				that.runtime[plural].Static["toReplace" + singular] = "after-simple";

			} );
	}
};
